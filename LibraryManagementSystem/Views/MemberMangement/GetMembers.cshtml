@model Application.Helpers.PaginatedResult<Application.ViewModels.Member.UserVM>

@{
    ViewData["Title"] = "Member Management";
}
@{
    Layout = "AdminLayout";
}
<style>
    .unclickable {
        pointer-events: none;
        opacity: 0.6;
        cursor: default;
    }
    .search-form {
        margin-bottom: 20px;
    }

    .pagination {
        margin-top: 20px;
        justify-content: center;
    }
</style>



<div class="search-form bg-light p-3 rounded shadow-sm mb-4" style="margin-top:5%"> 
    <form method="get" asp-action="Search" class="row g-3">
        <div class="col-md-3">
            <label for="searchUser">Search by User Name</label>
            <input type="text"
                   name="searchUser"
                   class="form-control"
                   placeholder="Search by User"
                   value="@ViewData["searchUser"]" />
        </div>
        <div class="col-md-3">
            <label for="searchEmail">Search by Email</label>
            <input type="email"
                   name="searchEmail"
                   class="form-control"
                   placeholder="Search by Email"
                   value="@ViewData["searchEmail"]" />
        </div>
        <div class="col-md-3">
            <label for="searchJoinedAt">Joined Date</label>
            <input type="date"
                   name="searchJoinedAt"
                   class="form-control"
                   value="@ViewData["searchJoinedAt"]" />
        </div>
        <div class="col-md-3 text-end">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Search
            </button>
            <a asp-action="Search" class="btn btn-secondary">
                <i class="bi bi-arrow-clockwise"></i> Reset
            </a>
        </div>
    </form>
</div>

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-info">
        @ViewBag.Message
    </div>
}
else
{
    <div class="col-md-4">
        <div class="card border-success shadow-sm">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title text-success mb-0">Number Of Members</h5>
                    </div>
                    <div>
                        <h2 class="text-success mb-0">@ViewData["TotalUsers"]</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <table class="table table-striped table-hover" style="margin-top:2%">
        <thead>
            <tr>
                <th>User Name</th>
                <th>Email</th>
                <th>Gender</th>
                <th>Address</th>
                <th>Date of Birth</th>
                <th>Phone Number</th>
                <th>Joined Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.UserName</td>
                    <td>@item.Email</td>
                    <td>@item.Gender</td>
                    <td>@item.Address</td>
                    <td>@item.DateOfBirth.ToShortDateString()</td>
                    <td>@item.PhoneNumber</td>
                    <td>@item.JoinedAt.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Search", new {
                        searchUser = ViewData["searchUser"],
                        searchEmail = ViewData["searchEmail"],
                        searchJoinedAt = ViewData["searchJoinedAt"],
                        pageNumber = Model.CurrentPage - 1,
                        pageSize = ViewData["pageSize"]
                    })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" style="@(i == Model.CurrentPage ? "background-color: #142c54; color: white;" : "")" href="@Url.Action("Search", new {
                        searchUser = ViewData["searchUser"],
                        searchEmail = ViewData["searchEmail"],
                        searchJoinedAt = ViewData["searchJoinedAt"],
                        pageNumber = i,
                        pageSize = ViewData["pageSize"]
                    })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Search", new {
                        searchUser = ViewData["searchUser"],
                        searchEmail = ViewData["searchEmail"],
                        searchJoinedAt = ViewData["searchJoinedAt"],
                        pageNumber = Model.CurrentPage + 1,
                        pageSize = ViewData["pageSize"]
                    })">Next</a>
                </li>
            }
        </ul>
    </div>
}
