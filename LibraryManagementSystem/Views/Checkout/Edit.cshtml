@model Application.ViewModels.Checkout.CheckoutDetailVM

@{
    ViewData["Title"] = "Edit Checkout";
}

<h2>Edit Checkout</h2>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        Please correct the following errors:
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success">
        @ViewBag.SuccessMessage
    </div>
    <a asp-action="GetCheckouts" class="btn btn-primary">Back to Checkouts</a>
}
<form asp-action="Edit">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="UserName"></label>
        <input asp-for="UserName" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label asp-for="BookName"></label>
        <input asp-for="BookName" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label asp-for="DueDate"></label>
        <input asp-for="DueDate" class="form-control" type="date" />
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Status"></label>
        <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<Application.Enums.CheckoutStatus>()">
            <option value="">Select Status</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="GetCheckouts" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}