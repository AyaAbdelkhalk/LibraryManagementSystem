@model Application.Helpers.PaginatedResult<Application.ViewModels.Return.ReturnDetailsVM>
@{
    ViewData["Title"] = "Get Returns";
}
@{
    Layout = "AdminLayout";
}

<div class="search-form bg-light p-3 rounded shadow-sm mb-4" style="margin-top:5%">
    <form method="get" asp-action="GetReturns" class="row g-3">
        <div class="col-md-3">
            <label for="searchUser">Search by User</label>
            <input type="text"
                   id="searchUser"
                   name="searchUser"
                   class="form-control"
                   placeholder="Search by User"
                   value="@ViewData["searchUser"]" />
        </div>
        <div class="col-md-3">
            <label for="searchBook">Search by Book</label>
            <input type="text"
                   id="searchBook"
                   name="searchBook"
                   class="form-control"
                   placeholder="Search by Book"
                   value="@ViewData["searchBook"]" />
        </div>
        <div class="col-md-3">
            <label for="searchDueDate">Due Date</label>
            <input type="date"
                   id="searchDueDate"
                   name="searchDueDate"
                   class="form-control"
                   value="@ViewData["searchDueDate"]" />
        </div>
        <div class="col-md-3">
            <label for="searchReturnDate">Return Date</label>
            <input type="date"
                   id="searchReturnDate"
                   name="searchReturnDate"
                   class="form-control"
                   value="@ViewData["searchReturnDate"]" />
        </div>
        <div class="col-12 text-end">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Search
            </button>
            <a asp-action="GetReturns" class="btn btn-secondary">
                <i class="bi bi-arrow-clockwise"></i> Reset
            </a>
        </div>
    </form>
</div>

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-info">
        @ViewBag.Message
    </div>
}
else
{
    <h2>Return Details</h2>

    <div class="row">
        <div class="col-md-6">
            <div class="card border-success shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title text-success mb-0">Returned Checkouts</h5>
                            <p class="mb-0">Total checkouts that have been returned.</p>
                        </div>
                        <div>
                            <h2 class="text-success mb-0">@ViewData["TotalReturned"]</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card border-danger shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title text-danger mb-0">Overdue Checkouts</h5>
                            <p class="mb-0">Total checkouts that are overdue.</p>
                        </div>
                        <div>
                            <h2 class="text-danger mb-0">@ViewData["OverdueCount"]</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>User Name</th>
                <th>Book Name</th>
                <th>Book Copy ID</th>
                <th>Due Date</th>
                <th>Return Date</th>
                <th>Overdue Days</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.UserName</td>
                    <td>@item.BookName</td>
                    <td>@item.BookCopyId</td>
                    <td>@item.DueDate.ToShortDateString()</td>
                    <td>@item.ReturnDate?.ToShortDateString() </td>
                    <td>@(item.IsOverdue ? item.OverdueDays.ToString() : "0")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("GetReturns", new {
                        searchUser = ViewData["searchUser"],
                        searchDueDate = ViewData["searchDueDate"],
                        searchReturnDate = ViewData["searchReturnDate"],
                        searchBook = ViewData["searchBook"],
                        pageNumber = Model.CurrentPage - 1,
                        pageSize = ViewData["pageSize"]
                    })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("GetReturns", new {
                        searchUser = ViewData["searchUser"],
                        searchDueDate = ViewData["searchDueDate"],
                        searchReturnDate = ViewData["searchReturnDate"],
                        searchBook = ViewData["searchBook"],
                        pageNumber = i,
                        pageSize = ViewData["pageSize"]
                    })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("GetReturns", new {
                        searchUser = ViewData["searchUser"],
                        searchDueDate = ViewData["searchDueDate"],
                        searchReturnDate = ViewData["searchReturnDate"],
                        searchBook = ViewData["searchBook"],
                        pageNumber = Model.CurrentPage + 1,
                        pageSize = ViewData["pageSize"]
                    })">Next</a>
                </li>
            }
        </ul>
    </div>
}
